var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.03,1,2.004]],["body/controllers/AppController.html",[0,1.637,1,3.186,2,1.31,3,0.484,4,0.423,5,0.423,6,3.327,7,0.546,8,1.5,9,4.749,10,1.563,11,0.034,12,0.833,13,4.002,14,1.2,15,1.255,16,0.604,17,0.682,18,2.813,19,3.327,20,0.484,21,0.158,22,1.563,23,2.285,24,1.31,25,4.002,26,0.027,27,0.027]],["title/modules/AppModule.html",[28,1.03,29,2.004]],["body/modules/AppModule.html",[1,2.931,2,1.304,3,0.343,4,0.301,5,0.301,11,0.034,16,0.689,17,0.484,18,2.807,19,2.361,20,0.343,21,0.112,26,0.021,27,0.021,28,1.506,29,3.873,30,1.214,31,1.214,32,1.465,33,1.465,34,1.214,35,2.373,36,1.465,37,2.361,38,2.361,39,2.361,40,2.807,41,3.107,42,3.107,43,3.107,44,2.054,45,1.465,46,1.465,47,2.84,48,2.869,49,2.84,50,2.84,51,2.84,52,2.84,53,2.84,54,2.361,55,2.84,56,2.84,57,1.644,58,2.84,59,4.599,60,2.84,61,4.599,62,2.84,63,2.84,64,2.84,65,2.84,66,2.84,67,2.84,68,2.84]],["title/injectables/AppService.html",[18,1.623,69,0.789]],["body/injectables/AppService.html",[3,0.505,4,0.442,5,0.442,7,0.571,8,1.54,9,4.822,11,0.034,12,0.87,14,1.253,15,1.288,16,0.505,17,0.712,18,2.649,20,0.505,21,0.165,24,1.368,26,0.028,27,0.028,69,1.288,70,1.958,71,3.473,72,4.178,73,4.178]],["title/controllers/AuthController.html",[0,1.03,74,2.004]],["body/controllers/AuthController.html",[0,1.168,2,1.168,3,0.431,4,0.377,5,0.377,7,0.487,8,1.393,10,1.393,11,0.034,12,0.743,14,1.069,16,0.661,17,0.608,20,0.431,21,0.141,22,1.393,23,2.036,24,1.168,26,0.025,27,0.025,57,1.275,74,2.96,75,2.964,76,2.272,77,3.566,78,1.847,79,3.862,80,3.566,81,2.95,82,4.645,83,3.566,84,1.393,85,0.816,86,1.275,87,2.036,88,1.523,89,2.568,90,2.964,91,2.665,92,2.964,93,2.964,94,2.272,95,1.393,96,3.566,97,3.566,98,3.566,99,3.566,100,1.393,101,3.566]],["title/classes/AuthDto.html",[21,0.124,81,1.796]],["body/classes/AuthDto.html",[3,0.455,4,0.398,5,0.398,7,0.514,10,1.878,11,0.034,12,1.002,15,1.207,16,0.641,20,0.455,21,0.21,26,0.026,27,0.026,81,2.747,85,1.101,95,1.47,102,2.149,103,3.129,104,2.481,105,2.747,106,3.065,107,3.764,108,3.764,109,2.398,110,3.764,111,3.027,112,3.378,113,2.149,114,3.999,115,3.378,116,2.149,117,3.764,118,3.764]],["title/guards/AuthGuard.html",[119,2.265,120,1.623]],["body/guards/AuthGuard.html",[3,0.313,4,0.274,5,0.274,7,0.354,8,1.119,11,0.035,12,0.911,14,1.119,15,0.936,16,0.578,17,0.442,20,0.313,21,0.103,22,1.012,24,1.222,26,0.02,27,0.02,57,1.563,69,0.936,78,1.563,84,1.708,85,1.16,86,1.563,100,1.012,120,1.925,121,2.592,122,2.155,123,4.784,124,3.636,125,3.732,126,1.48,127,2.592,128,3.803,129,2.592,130,3.732,131,4.784,132,2.592,133,2.592,134,2.688,135,3.732,136,5.442,137,2.592,138,4.373,139,4.373,140,1.48,141,1.652,142,2.155,143,2.155,144,2.155,145,2.732,146,2.592,147,5.07,148,2.592,149,2.131,150,1.925,151,1.652,152,3.636,153,2.592,154,1.867,155,2.155,156,2.592,157,2.592,158,2.155,159,2.155,160,2.592,161,2.592,162,2.592,163,2.592,164,2.592,165,2.155,166,2.592,167,2.592]],["title/modules/AuthModule.html",[28,1.03,40,1.623]],["body/modules/AuthModule.html",[2,1.454,3,0.402,4,0.352,5,0.352,11,0.034,16,0.69,17,0.567,20,0.402,21,0.132,26,0.024,27,0.024,28,1.635,30,1.422,31,1.422,32,1.717,33,1.717,34,1.422,35,2.576,36,1.717,40,3.054,44,2.29,45,1.717,46,1.717,48,2.397,74,3.183,91,2.945,92,2.767,140,1.9,141,2.121,142,2.767,154,2.397,155,2.767,165,2.767,168,2.767,169,2.767,170,1.712,171,3.328,172,3.328,173,1.422,174,3.328,175,3.328,176,3.328,177,3.328,178,3.328,179,3.328]],["title/injectables/AuthService.html",[69,0.789,91,1.623]],["body/injectables/AuthService.html",[3,0.29,4,0.254,5,0.254,7,0.328,8,1.059,11,0.034,12,0.961,14,1.256,15,1.29,16,0.594,17,0.409,20,0.29,21,0.095,24,1.371,26,0.019,27,0.019,57,1.497,69,0.886,70,1.125,78,1.99,79,2.935,81,2.391,84,1.635,85,0.958,86,1.497,88,1.509,91,1.821,93,1.997,100,1.803,105,2.016,106,2.25,124,2.935,126,2.016,128,3.829,134,2.543,140,1.371,145,2.636,149,2.016,150,1.821,152,1.997,170,1.256,173,1.026,180,1.997,181,3.531,182,4.918,183,1.531,184,2.402,185,1.531,186,3.531,187,3.481,188,2.402,189,2.402,190,2.402,191,2.402,192,1.531,193,2.543,194,1.997,195,2.402,196,2.402,197,2.402,198,1.997,199,2.543,200,2.402,201,3.531,202,2.935,203,3.531,204,3.531,205,2.935,206,2.402,207,2.402,208,2.402,209,2.402,210,2.402,211,2.402,212,3.531,213,2.402,214,2.402,215,2.402,216,2.402,217,2.402,218,2.402,219,1.125,220,2.402,221,2.402,222,2.402,223,2.402,224,2.402,225,1.73,226,2.402,227,2.402]],["title/injectables/PrismaService.html",[69,0.789,170,0.943]],["body/injectables/PrismaService.html",[3,0.481,4,0.422,5,0.422,7,0.544,8,1.496,11,0.034,12,0.83,14,1.195,16,0.603,17,0.679,20,0.481,21,0.158,26,0.027,27,0.027,69,1.251,70,1.867,78,1.946,100,1.556,144,3.313,170,1.496,228,3.313,229,4.987,230,5.443,231,5.992,232,3.985,233,3.313,234,3.985]],["title/controllers/ServiceController.html",[0,1.03,235,2.004]],["body/controllers/ServiceController.html",[0,0.713,2,0.713,3,0.263,4,0.23,5,0.23,7,0.297,8,0.984,10,1.937,11,0.034,12,1.033,14,1.487,15,1.329,16,0.57,17,0.371,20,0.263,21,0.086,22,0.85,23,1.243,24,1.624,26,0.018,27,0.018,57,1.686,76,1.387,78,2.137,84,1.842,85,1.08,86,1.686,87,2.51,88,2.119,89,1.567,90,1.809,94,1.387,95,0.85,100,1.937,120,1.123,219,2.412,235,2.091,236,1.809,237,2.176,238,2.727,239,2.727,240,4.397,241,2.727,242,3.281,243,2.727,244,1.809,245,2.433,246,2.176,247,2.176,248,1.809,249,1.809,250,2.176,251,1.809,252,2.176,253,1.809,254,1.809,255,2.176,256,2.176,257,2.268,258,2.176,259,2.176,260,1.809,261,1.809,262,2.176,263,1.567,264,1.809,265,1.809,266,1.567,267,2.037,268,1.809,269,1.809,270,2.844,271,1.567,272,2.176,273,2.176,274,1.809,275,3.572,276,2.176,277,3.281,278,2.176,279,1.809,280,2.176,281,1.809,282,2.176,283,2.176,284,2.176,285,2.176,286,2.176,287,1.809,288,2.176,289,2.176,290,1.809,291,2.176,292,2.176,293,2.176,294,2.176]],["title/classes/ServiceDTO.html",[21,0.124,245,1.623]],["body/classes/ServiceDTO.html",[3,0.385,4,0.337,5,0.337,7,0.435,10,2.043,11,0.034,12,1.09,15,1.471,16,0.59,20,0.521,21,0.207,26,0.023,27,0.023,85,1.198,95,1.243,102,1.818,104,2.222,109,2.028,111,3.29,112,3.672,113,1.818,115,3.591,116,1.818,245,2.222,257,1.642,295,2.293,296,3.112,297,4.06,298,3.517,299,4.06,300,3.183,301,3.183,302,2.46,303,3.183,304,3.183,305,3.183,306,3.183,307,3.183,308,3.103,309,2.028,310,2.293]],["title/classes/ServiceHire.html",[21,0.124,257,1.623]],["body/classes/ServiceHire.html",[3,0.412,4,0.361,5,0.361,7,0.466,10,1.762,11,0.034,12,0.94,15,1.471,16,0.611,20,0.545,21,0.213,26,0.024,27,0.024,85,1.033,95,1.332,102,1.948,104,2.328,109,2.876,111,3.349,112,3.737,113,1.948,115,3.664,116,1.948,245,1.76,257,2.328,295,2.457,296,2.174,297,2.837,298,2.457,299,2.837,302,1.948,308,3.25,309,3.222,310,3.642,311,3.412,312,3.412]],["title/modules/ServiceModule.html",[28,1.03,41,1.796]],["body/modules/ServiceModule.html",[2,1.488,3,0.417,4,0.365,5,0.365,11,0.034,16,0.679,17,0.588,20,0.417,21,0.136,26,0.024,27,0.024,28,1.665,30,1.474,31,1.474,32,1.779,33,1.779,34,1.474,35,2.622,36,1.779,40,2.975,41,3.48,44,2.345,45,1.779,46,1.779,48,3.274,170,1.684,173,1.474,235,3.24,267,2.897,268,2.867,313,2.867,314,3.449,315,2.867,316,3.449,317,3.449,318,3.449,319,3.449]],["title/injectables/ServiceService.html",[69,0.789,267,1.623]],["body/injectables/ServiceService.html",[3,0.126,4,0.11,5,0.11,7,0.142,8,0.541,11,0.035,12,0.981,14,1.379,15,1.394,16,0.288,17,0.178,20,0.126,21,0.041,22,0.407,24,1.464,26,0.01,27,0.01,57,1.644,69,0.453,70,0.489,78,2.072,84,1.796,85,1.052,86,1.644,87,2.15,88,1.911,100,2.108,126,0.596,145,2.928,149,2.38,150,2.15,151,1.518,170,0.851,173,0.446,183,0.665,185,1.149,192,0.665,199,1.716,205,0.867,219,2.297,225,2.045,238,1.499,239,1.499,241,1.499,243,1.499,244,0.867,245,1.654,248,1.499,253,1.499,257,1.942,260,0.867,267,0.93,269,0.867,298,1.716,309,0.665,310,2.528,320,0.867,321,1.804,322,1.804,323,1.804,324,1.499,325,2.839,326,1.804,327,1.299,328,1.043,329,1.043,330,1.043,331,1.804,332,2.399,333,1.043,334,3.51,335,3.599,336,2.383,337,2.528,338,2.839,339,1.804,340,4.472,341,1.804,342,1.043,343,2.36,344,2.839,345,2.045,346,1.499,347,1.043,348,1.043,349,2.383,350,3.31,351,1.043,352,1.499,353,1.043,354,2.839,355,1.499,356,1.499,357,2.839,358,1.804,359,1.043,360,1.299,361,1.043,362,1.804,363,1.043,364,1.043,365,1.043,366,2.383,367,1.043,368,1.804,369,1.804,370,1.043,371,1.804,372,1.804,373,1.043,374,1.804,375,1.804,376,2.666,377,1.804,378,1.981,379,1.804,380,1.499,381,1.043,382,3.51,383,1.043,384,1.043,385,0.867,386,2.839,387,1.043,388,1.043,389,1.804,390,1.043,391,1.043,392,2.383,393,0.867,394,0.867,395,1.804,396,1.043,397,1.804,398,1.043,399,1.043,400,1.043,401,1.043,402,1.043,403,1.043,404,1.043,405,1.043,406,1.043,407,1.043,408,1.043,409,1.043,410,1.804,411,1.043,412,1.043,413,1.043,414,1.043,415,1.043,416,1.804,417,1.043,418,1.043,419,1.043,420,0.867,421,1.043,422,1.804,423,1.804,424,1.043,425,1.804,426,2.383,427,1.804,428,1.043,429,1.804,430,1.804,431,1.149,432,1.804,433,1.804,434,1.804,435,1.043,436,1.043,437,1.043,438,1.043,439,1.043,440,1.043,441,1.043]],["title/controllers/TransactionController.html",[0,1.03,442,2.004]],["body/controllers/TransactionController.html",[0,1.15,2,1.15,3,0.424,4,0.372,5,0.372,7,0.48,8,1.38,10,1.372,11,0.034,12,0.732,14,1.054,15,1.287,16,0.658,17,0.599,20,0.424,21,0.139,22,1.372,23,2.006,24,1.15,26,0.025,27,0.025,57,1.256,76,2.239,78,1.834,84,1.372,85,0.804,86,1.256,88,1.501,94,2.239,95,1.372,100,1.372,120,1.812,219,2.156,263,2.53,266,2.53,270,3.313,271,2.53,275,2.53,442,2.932,443,2.921,444,3.513,445,4.6,446,3.513,447,3.513,448,3.513,449,2.646,450,2.921,451,3.513,452,3.513,453,3.513,454,3.513,455,3.513]],["title/modules/TransactionModule.html",[28,1.03,42,1.796]],["body/modules/TransactionModule.html",[2,1.548,3,0.442,4,0.388,5,0.388,11,0.034,16,0.668,17,0.624,20,0.442,21,0.145,26,0.025,27,0.025,28,1.714,30,1.565,31,1.565,32,1.889,33,1.889,34,1.565,35,2.7,36,1.889,42,3.451,44,2.438,45,1.889,46,1.889,170,1.717,173,1.565,442,3.335,449,2.953,450,3.044,456,3.044,457,3.044,458,3.662,459,3.662,460,3.662]],["title/injectables/TransactionService.html",[69,0.789,449,1.623]],["body/injectables/TransactionService.html",[3,0.34,4,0.298,5,0.298,7,0.384,8,1.187,11,0.034,12,0.953,14,1.187,15,1.361,16,0.478,17,0.48,20,0.34,21,0.111,22,1.099,24,1.296,26,0.021,27,0.021,57,1.636,69,0.993,70,1.319,78,1.94,84,1.788,85,1.048,86,1.636,88,1.691,100,1.788,126,1.607,145,2.26,149,2.614,150,2.361,151,2.522,170,1.373,173,1.203,183,1.794,185,1.794,192,1.794,194,2.34,199,2.027,219,2.145,225,2.851,309,1.794,324,3.29,332,2.917,346,3.29,376,2.34,378,3.29,380,3.29,385,3.29,393,2.34,394,2.34,449,2.042,461,2.34,462,3.958,463,2.815,464,2.815,465,3.958,466,2.815,467,2.815,468,3.958,469,3.958,470,3.958,471,2.851,472,3.958,473,2.815,474,2.815]],["title/controllers/UserController.html",[0,1.03,475,2.004]],["body/controllers/UserController.html",[0,0.624,2,0.624,3,0.23,4,0.202,5,0.202,7,0.26,8,0.889,10,1.918,11,0.034,12,1.023,14,1.473,15,1.433,16,0.537,17,0.325,20,0.23,21,0.075,22,0.744,23,1.088,24,1.608,26,0.016,27,0.016,57,1.682,76,1.214,78,2.129,84,1.837,85,1.077,86,1.682,87,2.537,88,2.098,89,2.134,94,1.214,95,0.744,105,2.076,111,1.088,120,0.983,219,2.301,249,1.584,251,1.584,254,1.584,261,1.584,263,1.372,264,1.584,265,1.584,266,1.372,270,2.134,271,1.372,274,2.464,275,3.389,279,1.584,281,1.584,287,1.584,290,1.584,302,2.076,327,2.134,332,2.614,352,1.584,355,1.584,356,1.584,360,2.134,431,1.888,471,3.201,475,1.888,476,1.584,477,1.905,478,2.464,479,3.41,480,2.464,481,2.963,482,2.464,483,2.963,484,1.584,485,1.905,486,1.905,487,1.584,488,1.905,489,1.905,490,1.584,491,1.905,492,1.905,493,2.686,494,1.905,495,1.584,496,1.905,497,1.905,498,1.905,499,1.905,500,1.905,501,1.876,502,1.584,503,1.584,504,1.905,505,1.905,506,1.584,507,3.911,508,1.905,509,1.905,510,1.905,511,3.636,512,1.905,513,1.905,514,1.905,515,1.905,516,1.905,517,1.905,518,1.905,519,1.905,520,1.905,521,1.905,522,1.905,523,1.905,524,1.905,525,1.905,526,1.905]],["title/classes/UserDTO.html",[21,0.124,493,1.796]],["body/classes/UserDTO.html",[3,0.348,4,0.305,5,0.305,7,0.394,10,2.135,11,0.034,12,1.139,15,1.436,16,0.56,20,0.348,21,0.183,26,0.022,27,0.022,85,1.252,86,1.439,95,1.126,102,1.646,104,2.076,105,2.648,106,2.955,109,1.837,111,3.204,112,3.576,113,1.646,114,3.346,115,3.485,116,1.646,302,2.298,308,2.899,337,2.899,345,2.899,431,2.955,493,2.298,527,2.077,528,4.637,529,3.855,530,4.546,531,2.883,532,2.883,533,2.883,534,2.883,535,4.025,536,2.883,537,2.883,538,2.883,539,2.883,540,2.883,541,4.025,542,2.883]],["title/modules/UserModule.html",[28,1.03,43,1.796]],["body/modules/UserModule.html",[2,1.529,3,0.434,4,0.38,5,0.38,11,0.034,16,0.688,17,0.612,20,0.434,21,0.142,26,0.025,27,0.025,28,1.698,30,1.535,31,1.535,32,1.853,33,1.853,34,1.535,35,2.675,36,1.853,43,3.437,44,2.408,45,1.853,46,1.853,128,2.588,140,2.051,170,1.707,173,1.535,475,3.305,501,2.935,502,2.987,543,2.987,544,2.987,545,3.593,546,3.593,547,3.593]],["title/injectables/UserService.html",[69,0.789,501,1.623]],["body/injectables/UserService.html",[3,0.247,4,0.216,5,0.216,7,0.279,8,0.939,11,0.034,12,1.109,14,1.558,15,1.424,16,0.515,17,0.349,20,0.247,21,0.081,22,0.799,24,0.67,26,0.017,27,0.017,57,1.857,69,0.785,70,0.958,78,2.116,84,2.029,85,1.189,86,1.857,87,1.787,88,2.152,100,1.485,105,1.787,106,1.303,126,1.168,134,2.254,145,1.787,149,1.787,150,1.614,151,1.303,170,1.277,173,0.874,183,1.303,185,1.994,187,1.7,192,1.303,193,2.254,198,1.7,202,1.7,219,1.781,302,1.787,327,2.254,332,1.994,335,1.7,343,1.7,350,2.602,360,2.254,420,2.602,431,1.303,471,1.473,478,2.602,479,3.16,480,2.602,482,2.602,484,1.7,487,1.7,490,1.7,493,2.621,495,1.7,501,1.614,503,1.7,506,1.7,507,1.7,529,2.602,548,1.7,549,3.129,550,3.129,551,3.129,552,2.045,553,2.045,554,2.045,555,2.045,556,2.045,557,2.045,558,2.045,559,3.129,560,2.045,561,2.045,562,2.045,563,2.045,564,2.045,565,2.045,566,2.045,567,3.129,568,2.045,569,2.045,570,2.045,571,2.045,572,3.129,573,3.801,574,3.129,575,3.129,576,3.129,577,2.045,578,2.045,579,2.045,580,2.045,581,3.129,582,3.129,583,2.045,584,2.045,585,3.129,586,2.045,587,2.045]],["title/coverage.html",[588,3.078]],["body/coverage.html",[0,1.77,1,1.963,5,0.326,6,2.56,11,0.034,18,1.589,21,0.204,26,0.023,27,0.023,34,1.316,69,1.4,71,2.56,74,1.963,75,2.56,81,1.759,85,0.705,91,1.589,103,2.56,119,2.218,120,1.589,122,2.56,141,1.963,150,1.589,170,0.924,180,2.56,228,2.56,235,1.963,236,2.56,245,1.589,257,1.589,267,1.589,295,3.034,320,2.56,442,1.963,443,2.56,449,1.589,461,2.56,475,1.963,476,2.56,493,1.759,501,1.589,527,2.218,548,2.56,588,2.218,589,3.08,590,3.08,591,3.08,592,6.236,593,5.405,594,2.56,595,3.08,596,4.213,597,4.213,598,4.213,599,4.213,600,2.56,601,3.08,602,4.213,603,3.08,604,3.08,605,3.08,606,3.08,607,3.08,608,3.08]],["title/dependencies.html",[31,1.614,609,2.192]],["body/dependencies.html",[11,0.035,17,0.644,21,0.191,26,0.026,27,0.026,31,1.614,54,3.141,95,1.476,113,2.158,116,2.158,140,2.158,143,3.141,193,2.722,233,3.141,610,5.311,611,3.779,612,3.779,613,3.779,614,3.779,615,3.779,616,3.779,617,3.779,618,3.779,619,3.779,620,3.779,621,3.779,622,3.779,623,3.779,624,3.779,625,3.779,626,3.779,627,3.779,628,3.779,629,3.779,630,3.779,631,3.779,632,3.779,633,3.779,634,3.779,635,3.779,636,3.779]],["title/miscellaneous/enumerations.html",[637,1.36,638,3.141]],["body/miscellaneous/enumerations.html",[7,0.629,11,0.032,26,0.029,27,0.029,337,3.921,345,3.921,527,3.315,530,4.526,637,2.374,638,3.827,639,4.603,640,4.526]],["title/miscellaneous/functions.html",[637,1.36,641,3.141]],["body/miscellaneous/functions.html",[7,0.651,11,0.03,26,0.03,27,0.03,34,2.513,594,3.961,637,2.458,641,3.961,642,4.765]],["title/index.html",[7,0.36,643,2.636,644,2.636]],["body/index.html",[4,0.351,11,0.034,26,0.024,27,0.024,159,2.757,296,2.114,588,2.389,645,3.317,646,3.317,647,4.429,648,3.317,649,3.317,650,3.317,651,3.317,652,3.317,653,3.317,654,4.986,655,3.317,656,3.317,657,3.317,658,3.317,659,4.986,660,5.823,661,3.317,662,3.317,663,3.317,664,5.704,665,3.317,666,3.317,667,4.429,668,3.317,669,3.317,670,3.317,671,3.317,672,4.429,673,4.429,674,3.317,675,3.317,676,3.317,677,4.429,678,4.429,679,3.317,680,3.317,681,3.317,682,3.317,683,3.317,684,2.757,685,3.317,686,3.317,687,3.317,688,3.317,689,3.317,690,3.317,691,3.317,692,3.317,693,3.317,694,2.757,695,3.317,696,3.317,697,3.317,698,3.317,699,3.317,700,3.317,701,2.757]],["title/modules.html",[30,1.826]],["body/modules.html",[11,0.028,26,0.028,27,0.028,29,2.785,30,1.867,40,2.254,41,2.495,42,2.495,43,2.495,684,5.013,702,6.03,703,6.03,704,6.03]],["title/overview.html",[705,3.553]],["body/overview.html",[2,1.028,11,0.033,18,2.502,26,0.023,27,0.023,28,1.028,29,3.883,30,1.342,31,1.342,32,1.62,33,1.62,34,1.342,35,1.62,36,1.62,37,2.611,38,2.611,39,2.611,40,3.014,41,3.383,42,3.279,43,3.279,44,2.202,45,1.62,46,1.62,70,1.472,91,2.502,102,1.794,119,2.262,168,2.611,169,2.611,170,1.684,267,2.502,313,2.611,315,2.611,449,2.502,456,2.611,457,2.611,501,2.502,543,2.611,544,2.611,705,2.611,706,4.269,707,3.141,708,3.141,709,3.141]],["title/properties.html",[104,1.949,609,2.192]],["body/properties.html",[11,0.033,26,0.03,27,0.03,104,2.421,296,2.991,694,3.903,701,3.903,710,4.694,711,4.694,712,4.694]],["title/miscellaneous/variables.html",[637,1.36,713,3.141]],["body/miscellaneous/variables.html",[7,0.623,11,0.033,26,0.029,27,0.029,85,1.043,141,3.45,154,3.284,158,3.79,600,3.79,637,2.352,640,3.79,713,3.79,714,4.559,715,4.559,716,4.559]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":711,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["0.15.0",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["0.40.3",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":709,"title":{},"body":{"overview.html":{}}}],["1.11.0",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["1000",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["10000",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["120s",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["20",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["3",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":708,"title":{},"body":{"overview.html":{}}}],["400",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ServiceService.html":{}}}],["5",{"_index":706,"title":{},"body":{"overview.html":{}}}],["5.0.2",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["5.17.0",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":707,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["64",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["7.1.0",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["78495849jfkdk4759483853953530",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9/14",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["access_token",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":685,"title":{},"body":{"index.html":{}}}],["amount",{"_index":441,"title":{},"body":{"injectables/ServiceService.html":{}}}],["ao",{"_index":407,"title":{},"body":{"injectables/ServiceService.html":{}}}],["api",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["api/auth",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/service",{"_index":237,"title":{},"body":{"controllers/ServiceController.html":{}}}],["api/transaction",{"_index":444,"title":{},"body":{"controllers/TransactionController.html":{}}}],["api/user",{"_index":477,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth",{"_index":270,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":111,"title":{},"body":{"classes/AuthDto.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["apiproperty()@expose()@isnotempty",{"_index":109,"title":{},"body":{"classes/AuthDto.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"classes/UserDTO.html":{}}}],["apiproperty()@expose()@isnumber",{"_index":303,"title":{},"body":{"classes/ServiceDTO.html":{}}}],["apiproperty()@isnotempty()@expose",{"_index":300,"title":{},"body":{"classes/ServiceDTO.html":{}}}],["apiproperty()@isnotempty()@expose()@isemail",{"_index":107,"title":{},"body":{"classes/AuthDto.html":{}}}],["apitags",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ServiceController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('service",{"_index":272,"title":{},"body":{"controllers/ServiceController.html":{}}}],["apitags('transaction",{"_index":451,"title":{},"body":{"controllers/TransactionController.html":{}}}],["apitags('user",{"_index":504,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":385,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/TransactionService.html":{}}}],["aplicação\",400",{"_index":381,"title":{},"body":{"injectables/ServiceService.html":{}}}],["app",{"_index":662,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":653,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argon2",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["argon2.hash(password",{"_index":565,"title":{},"body":{"injectables/UserService.html":{}}}],["argon2.verify(hashedpassword",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["assigning",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{}}}],["async",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["atualizar",{"_index":368,"title":{},"body":{"injectables/ServiceService.html":{}}}],["atualização",{"_index":522,"title":{},"body":{"controllers/UserController.html":{}}}],["auth.controller",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.guard",{"_index":271,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["auth/auth.module",{"_index":318,"title":{},"body":{"modules/ServiceModule.html":{}}}],["authcontroller",{"_index":74,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authdto",{"_index":81,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authguard",{"_index":120,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"controllers/ServiceController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":694,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":91,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":686,"title":{},"body":{"index.html":{}}}],["balance",{"_index":431,"title":{},"body":{"injectables/ServiceService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["balance:true",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["balance_cleint",{"_index":429,"title":{},"body":{"injectables/ServiceService.html":{}}}],["balance_provider",{"_index":433,"title":{},"body":{"injectables/ServiceService.html":{}}}],["bcrypt",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["body('userid",{"_index":518,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":704,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":702,"title":{},"body":{"modules.html":{}}}],["building",{"_index":648,"title":{},"body":{"index.html":{}}}],["busca",{"_index":511,"title":{},"body":{"controllers/UserController.html":{}}}],["buscar",{"_index":369,"title":{},"body":{"injectables/ServiceService.html":{}}}],["cadastro",{"_index":506,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["calc_balance",{"_index":321,"title":{},"body":{"injectables/ServiceService.html":{}}}],["calc_balance(undefined",{"_index":329,"title":{},"body":{"injectables/ServiceService.html":{}}}],["calc_balance({clientid",{"_index":421,"title":{},"body":{"injectables/ServiceService.html":{}}}],["calcular",{"_index":417,"title":{},"body":{"injectables/ServiceService.html":{}}}],["canactivate",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catch",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catch(error",{"_index":378,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/TransactionService.html":{}}}],["chackpassword",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkbalance",{"_index":322,"title":{},"body":{"injectables/ServiceService.html":{}}}],["checkbalance(serviceid",{"_index":331,"title":{},"body":{"injectables/ServiceService.html":{}}}],["checkemail",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["checkemail.id",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkemail.password",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkid",{"_index":372,"title":{},"body":{"injectables/ServiceService.html":{}}}],["checknif",{"_index":568,"title":{},"body":{"injectables/UserService.html":{}}}],["checkprovider",{"_index":323,"title":{},"body":{"injectables/ServiceService.html":{}}}],["checkprovider(providerid",{"_index":341,"title":{},"body":{"injectables/ServiceService.html":{}}}],["checkservice",{"_index":412,"title":{},"body":{"injectables/ServiceService.html":{}}}],["checkservice.id",{"_index":414,"title":{},"body":{"injectables/ServiceService.html":{}}}],["checkuser",{"_index":324,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/TransactionService.html":{}}}],["checkuser(userid",{"_index":346,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/TransactionService.html":{}}}],["class",{"_index":21,"title":{"classes/AuthDto.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"classes/UserDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":102,"title":{},"body":{"classes/AuthDto.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"classes/UserDTO.html":{},"overview.html":{}}}],["cleinte",{"_index":419,"title":{},"body":{"injectables/ServiceService.html":{}}}],["cliente",{"_index":337,"title":{},"body":{"injectables/ServiceService.html":{},"classes/UserDTO.html":{},"miscellaneous/enumerations.html":{}}}],["clientid",{"_index":309,"title":{},"body":{"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_servicemodule",{"_index":313,"title":{},"body":{"modules/ServiceModule.html":{},"overview.html":{}}}],["cluster_servicemodule_imports",{"_index":314,"title":{},"body":{"modules/ServiceModule.html":{}}}],["cluster_servicemodule_providers",{"_index":315,"title":{},"body":{"modules/ServiceModule.html":{},"overview.html":{}}}],["cluster_transactionmodule",{"_index":456,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_transactionmodule_providers",{"_index":457,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":543,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":544,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["comparepasswords",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepasswords(password",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["comprar",{"_index":339,"title":{},"body":{"injectables/ServiceService.html":{}}}],["console.log(chackpassword",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(checkemail.password",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["constants",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["constructor",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["constructor(jwtservice",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(prisma",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["contacta",{"_index":469,"title":{},"body":{"injectables/TransactionService.html":{}}}],["context",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contratar",{"_index":366,"title":{},"body":{"injectables/ServiceService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ServiceController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ServiceController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('api/auth",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('api/service",{"_index":273,"title":{},"body":{"controllers/ServiceController.html":{}}}],["controller('api/transaction",{"_index":452,"title":{},"body":{"controllers/TransactionController.html":{}}}],["controller('api/user",{"_index":505,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["correto",{"_index":579,"title":{},"body":{"injectables/UserService.html":{}}}],["coverage",{"_index":588,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createservice",{"_index":238,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceService.html":{}}}],["createservice(@body",{"_index":276,"title":{},"body":{"controllers/ServiceController.html":{}}}],["createservice(data",{"_index":244,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceService.html":{}}}],["createservice(data:servicedto",{"_index":401,"title":{},"body":{"injectables/ServiceService.html":{}}}],["createuser",{"_index":549,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(undefined",{"_index":553,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser({fullname,email,password,nif,role,balance}:userdto",{"_index":566,"title":{},"body":{"injectables/UserService.html":{}}}],["criar",{"_index":349,"title":{},"body":{"injectables/ServiceService.html":{}}}],["csurf",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["current_balance_client",{"_index":425,"title":{},"body":{"injectables/ServiceService.html":{}}}],["current_balance_provider",{"_index":427,"title":{},"body":{"injectables/ServiceService.html":{}}}],["data",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["data:authdto",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["data:servicedto",{"_index":277,"title":{},"body":{"controllers/ServiceController.html":{}}}],["data:userdto",{"_index":509,"title":{},"body":{"controllers/UserController.html":{}}}],["data_",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["data_user",{"_index":437,"title":{},"body":{"injectables/ServiceService.html":{}}}],["data_user).balance_cleint.id",{"_index":440,"title":{},"body":{"injectables/ServiceService.html":{}}}],["de",{"_index":471,"title":{},"body":{"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["default",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["deletar",{"_index":352,"title":{},"body":{"injectables/ServiceService.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":264,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["delete('delete/:id",{"_index":287,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["delete('delete/:id')@useguards(authguard",{"_index":249,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["deleteservice",{"_index":239,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceService.html":{}}}],["deleteservice(@param('id",{"_index":288,"title":{},"body":{"controllers/ServiceController.html":{}}}],["deleteservice(id",{"_index":248,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceService.html":{}}}],["deleteuser",{"_index":478,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@param('id",{"_index":525,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(id",{"_index":484,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":296,"title":{},"body":{"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"index.html":{},"properties.html":{}}}],["desenvolvimento\",400",{"_index":472,"title":{},"body":{"injectables/TransactionService.html":{}}}],["development",{"_index":663,"title":{},"body":{"index.html":{}}}],["diferente",{"_index":581,"title":{},"body":{"injectables/UserService.html":{}}}],["documentation",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["dto/service.dto",{"_index":269,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceService.html":{}}}],["dto/user.dto",{"_index":503,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":420,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":674,"title":{},"body":{"index.html":{}}}],["econtrado\",404",{"_index":467,"title":{},"body":{"injectables/TransactionService.html":{}}}],["efficient",{"_index":649,"title":{},"body":{"index.html":{}}}],["em",{"_index":574,"title":{},"body":{"injectables/UserService.html":{}}}],["email",{"_index":105,"title":{},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["email:checkemail.email",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["email:string",{"_index":117,"title":{},"body":{"classes/AuthDto.html":{}}}],["email:true",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["encontrado\",404",{"_index":377,"title":{},"body":{"injectables/ServiceService.html":{}}}],["encontrado.\",404",{"_index":395,"title":{},"body":{"injectables/ServiceService.html":{}}}],["enum",{"_index":542,"title":{},"body":{"classes/UserDTO.html":{}}}],["enumerations",{"_index":638,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equipa",{"_index":470,"title":{},"body":{"injectables/TransactionService.html":{}}}],["escolha",{"_index":580,"title":{},"body":{"injectables/UserService.html":{}}}],["est",{"_index":573,"title":{},"body":{"injectables/UserService.html":{}}}],["example",{"_index":659,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["expiresin",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["expose",{"_index":112,"title":{},"body":{"classes/AuthDto.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"classes/UserDTO.html":{}}}],["express",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":229,"title":{},"body":{"injectables/PrismaService.html":{}}}],["extracttokenfromheader",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["favor",{"_index":576,"title":{},"body":{"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fornecido",{"_index":571,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":647,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":528,"title":{},"body":{"classes/UserDTO.html":{}}}],["function",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":641,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('getall",{"_index":279,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["get('getall')@useguards(authguard",{"_index":251,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["get('getbyemail",{"_index":513,"title":{},"body":{"controllers/UserController.html":{}}}],["get('getbyemail')@useguards(authguard",{"_index":488,"title":{},"body":{"controllers/UserController.html":{}}}],["get('getbyid/:id",{"_index":281,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["get('getbyid/:id')@useguards(authguard",{"_index":254,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["get('history/:id",{"_index":453,"title":{},"body":{"controllers/TransactionController.html":{}}}],["get('history/:id')@useguards(authguard",{"_index":447,"title":{},"body":{"controllers/TransactionController.html":{}}}],["getallservice",{"_index":325,"title":{},"body":{"injectables/ServiceService.html":{}}}],["getallservices",{"_index":240,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getallusers",{"_index":479,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getbyid",{"_index":326,"title":{},"body":{"injectables/ServiceService.html":{}}}],["getbyid(id",{"_index":358,"title":{},"body":{"injectables/ServiceService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getservicebyid",{"_index":241,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceService.html":{}}}],["getservicebyid(@param('id",{"_index":282,"title":{},"body":{"controllers/ServiceController.html":{}}}],["getservicebyid(id",{"_index":253,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceService.html":{}}}],["getting",{"_index":643,"title":{"index.html":{}},"body":{}}],["getuserbyemail",{"_index":480,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserbyemail(@body('email",{"_index":514,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyemail(email",{"_index":487,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserbyid",{"_index":327,"title":{},"body":{"injectables/ServiceService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserbyid(@param('id",{"_index":520,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid(id",{"_index":490,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserbyid(userid",{"_index":362,"title":{},"body":{"injectables/ServiceService.html":{}}}],["getusertransaction",{"_index":445,"title":{},"body":{"controllers/TransactionController.html":{}}}],["getusertransaction(@param('id",{"_index":454,"title":{},"body":{"controllers/TransactionController.html":{}}}],["getusertransaction(id",{"_index":446,"title":{},"body":{"controllers/TransactionController.html":{}}}],["getusertransactions",{"_index":462,"title":{},"body":{"injectables/TransactionService.html":{}}}],["getusertransactions(userid",{"_index":465,"title":{},"body":{"injectables/TransactionService.html":{}}}],["global",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["grow",{"_index":681,"title":{},"body":{"index.html":{}}}],["guard",{"_index":119,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handlers",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hashedpassword",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["hashpassword",{"_index":550,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpassword(password",{"_index":559,"title":{},"body":{"injectables/UserService.html":{}}}],["helmet",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["hireservice",{"_index":242,"title":{},"body":{"controllers/ServiceController.html":{}}}],["hireservice(@body",{"_index":285,"title":{},"body":{"controllers/ServiceController.html":{}}}],["hireservice(data",{"_index":256,"title":{},"body":{"controllers/ServiceController.html":{}}}],["httpexception",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["httpexception(\"erro",{"_index":468,"title":{},"body":{"injectables/TransactionService.html":{}}}],["httpexception(\"error",{"_index":406,"title":{},"body":{"injectables/ServiceService.html":{}}}],["httpexception(\"id",{"_index":374,"title":{},"body":{"injectables/ServiceService.html":{}}}],["httpexception(\"prestador",{"_index":399,"title":{},"body":{"injectables/ServiceService.html":{}}}],["httpexception(\"problema",{"_index":379,"title":{},"body":{"injectables/ServiceService.html":{}}}],["httpexception(\"saldo",{"_index":390,"title":{},"body":{"injectables/ServiceService.html":{}}}],["httpexception(\"um",{"_index":404,"title":{},"body":{"injectables/ServiceService.html":{}}}],["httpexception(\"usuario",{"_index":394,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/TransactionService.html":{}}}],["httpexception('email",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('este",{"_index":584,"title":{},"body":{"injectables/UserService.html":{}}}],["httpexception('o",{"_index":570,"title":{},"body":{"injectables/UserService.html":{}}}],["https://nestjs.com",{"_index":698,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":564,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus.bad_request",{"_index":582,"title":{},"body":{"injectables/UserService.html":{}}}],["id",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id:string",{"_index":293,"title":{},"body":{"controllers/ServiceController.html":{}}}],["id:true",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["identifier",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["if(!checkemail",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!checkid",{"_index":373,"title":{},"body":{"injectables/ServiceService.html":{}}}],["if(!provider",{"_index":398,"title":{},"body":{"injectables/ServiceService.html":{}}}],["if(!service",{"_index":384,"title":{},"body":{"injectables/ServiceService.html":{}}}],["if(!user",{"_index":393,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/TransactionService.html":{}}}],["if(chackpassword",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(checkemail",{"_index":583,"title":{},"body":{"injectables/UserService.html":{}}}],["if(checknif",{"_index":569,"title":{},"body":{"injectables/UserService.html":{}}}],["if(password.length",{"_index":587,"title":{},"body":{"injectables/UserService.html":{}}}],["if(service.price",{"_index":388,"title":{},"body":{"injectables/ServiceService.html":{}}}],["if(this.checkprovider",{"_index":402,"title":{},"body":{"injectables/ServiceService.html":{}}}],["implements",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{}}}],["incorreta",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["informado",{"_index":375,"title":{},"body":{"injectables/ServiceService.html":{}}}],["injectable",{"_index":69,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["insira",{"_index":586,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":658,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":661,"title":{},"body":{"index.html":{}}}],["insuficiente",{"_index":391,"title":{},"body":{"injectables/ServiceService.html":{}}}],["isemail",{"_index":114,"title":{},"body":{"classes/AuthDto.html":{},"classes/UserDTO.html":{}}}],["isemail()@isnotempty()@expose()@apiproperty",{"_index":533,"title":{},"body":{"classes/UserDTO.html":{}}}],["isnotempty",{"_index":115,"title":{},"body":{"classes/AuthDto.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"classes/UserDTO.html":{}}}],["isnotempty()@apiproperty()@expose",{"_index":306,"title":{},"body":{"classes/ServiceDTO.html":{}}}],["isnotempty()@apiproperty()@expose()@isnumberstring",{"_index":537,"title":{},"body":{"classes/UserDTO.html":{}}}],["isnotempty()@expose()@apiproperty",{"_index":535,"title":{},"body":{"classes/UserDTO.html":{}}}],["isnumber",{"_index":308,"title":{},"body":{"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"classes/UserDTO.html":{}}}],["isnumber()@expose()@apiproperty",{"_index":531,"title":{},"body":{"classes/UserDTO.html":{}}}],["isnumberstring",{"_index":541,"title":{},"body":{"classes/UserDTO.html":{}}}],["j",{"_index":572,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":688,"title":{},"body":{"index.html":{}}}],["jwtconstants",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["jwtmodule",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{}}}],["kamil",{"_index":695,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":701,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":678,"title":{},"body":{"index.html":{}}}],["limit",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["logout",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["mail",{"_index":585,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["message",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":637,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":677,"title":{},"body":{"index.html":{}}}],["mode",{"_index":667,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/service/service.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/transaction/transaction.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":691,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":696,"title":{},"body":{"index.html":{}}}],["na",{"_index":380,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/TransactionService.html":{}}}],["name",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":654,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":700,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["nif",{"_index":529,"title":{},"body":{"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["nif:true",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["node.js",{"_index":646,"title":{},"body":{"index.html":{}}}],["npm",{"_index":660,"title":{},"body":{"index.html":{}}}],["number",{"_index":302,"title":{},"body":{"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["não",{"_index":376,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/TransactionService.html":{}}}],["número",{"_index":578,"title":{},"body":{"injectables/UserService.html":{}}}],["o",{"_index":335,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["object",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":231,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":679,"title":{},"body":{"index.html":{}}}],["optional",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["os",{"_index":356,"title":{},"body":{"injectables/ServiceService.html":{},"controllers/UserController.html":{}}}],["ou",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":705,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":609,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":338,"title":{},"body":{"injectables/ServiceService.html":{}}}],["param",{"_index":263,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":292,"title":{},"body":{"controllers/ServiceController.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["password",{"_index":106,"title":{},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["password:string",{"_index":118,"title":{},"body":{"classes/AuthDto.html":{}}}],["password}:authdto",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["pegar",{"_index":354,"title":{},"body":{"injectables/ServiceService.html":{}}}],["pelo",{"_index":371,"title":{},"body":{"injectables/ServiceService.html":{}}}],["please",{"_index":689,"title":{},"body":{"index.html":{}}}],["poder",{"_index":405,"title":{},"body":{"injectables/ServiceService.html":{}}}],["por",{"_index":360,"title":{},"body":{"injectables/ServiceService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["post",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ServiceController.html":{}}}],["post('create",{"_index":274,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["post('create')@useguards(authguard",{"_index":246,"title":{},"body":{"controllers/ServiceController.html":{}}}],["post('hire",{"_index":284,"title":{},"body":{"controllers/ServiceController.html":{}}}],["post('hire')@useguards(authguard",{"_index":258,"title":{},"body":{"controllers/ServiceController.html":{}}}],["post('signin",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('updatebalance",{"_index":516,"title":{},"body":{"controllers/UserController.html":{}}}],["post('updatebalance')@useguards(authguard",{"_index":496,"title":{},"body":{"controllers/UserController.html":{}}}],["post,get",{"_index":500,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ServiceController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["prestador",{"_index":345,"title":{},"body":{"injectables/ServiceService.html":{},"classes/UserDTO.html":{},"miscellaneous/enumerations.html":{}}}],["price",{"_index":297,"title":{},"body":{"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{}}}],["prisma",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["prisma/client",{"_index":233,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma:prismaservice",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionService.html":{}}}],["prismaclient",{"_index":230,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":170,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["production",{"_index":669,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":645,"title":{},"body":{"index.html":{}}}],["project",{"_index":680,"title":{},"body":{"index.html":{}}}],["promise",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":104,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"classes/UserDTO.html":{},"properties.html":{}}}],["provider",{"_index":397,"title":{},"body":{"injectables/ServiceService.html":{}}}],["provider.balance",{"_index":428,"title":{},"body":{"injectables/ServiceService.html":{}}}],["provider.role",{"_index":400,"title":{},"body":{"injectables/ServiceService.html":{}}}],["providerid",{"_index":298,"title":{},"body":{"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"injectables/ServiceService.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":265,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["put('update/:id",{"_index":290,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["put('update/:id')@useguards(authguard",{"_index":261,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/UserController.html":{}}}],["read",{"_index":690,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ServiceController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["reflect",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":657,"title":{},"body":{"index.html":{}}}],["request",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.headers.authorization?.split",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["restante",{"_index":418,"title":{},"body":{"injectables/ServiceService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role",{"_index":530,"title":{},"body":{"classes/UserDTO.html":{},"miscellaneous/enumerations.html":{}}}],["role:checkemail.role",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["role:true",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["route",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":664,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["saldo",{"_index":336,"title":{},"body":{"injectables/ServiceService.html":{}}}],["salvar",{"_index":408,"title":{},"body":{"injectables/ServiceService.html":{}}}],["scalable",{"_index":650,"title":{},"body":{"index.html":{}}}],["se",{"_index":343,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["secret",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["senha",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["server",{"_index":651,"title":{},"body":{"index.html":{}}}],["service",{"_index":382,"title":{},"body":{"injectables/ServiceService.html":{}}}],["service.controller",{"_index":317,"title":{},"body":{"modules/ServiceModule.html":{}}}],["service.id",{"_index":416,"title":{},"body":{"injectables/ServiceService.html":{}}}],["service.price",{"_index":426,"title":{},"body":{"injectables/ServiceService.html":{}}}],["service.providerid",{"_index":434,"title":{},"body":{"injectables/ServiceService.html":{}}}],["service.service",{"_index":268,"title":{},"body":{"controllers/ServiceController.html":{},"modules/ServiceModule.html":{}}}],["servicecontroller",{"_index":235,"title":{"controllers/ServiceController.html":{}},"body":{"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"coverage.html":{}}}],["servicedto",{"_index":245,"title":{"classes/ServiceDTO.html":{}},"body":{"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"injectables/ServiceService.html":{},"coverage.html":{}}}],["servicehire",{"_index":257,"title":{"classes/ServiceHire.html":{}},"body":{"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"injectables/ServiceService.html":{},"coverage.html":{}}}],["servicehire(undefined",{"_index":364,"title":{},"body":{"injectables/ServiceService.html":{}}}],["servicehire({clientid",{"_index":435,"title":{},"body":{"injectables/ServiceService.html":{}}}],["serviceid",{"_index":310,"title":{},"body":{"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"injectables/ServiceService.html":{}}}],["serviceid}:servicehire",{"_index":422,"title":{},"body":{"injectables/ServiceService.html":{}}}],["servicemodule",{"_index":41,"title":{"modules/ServiceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["serviceservice",{"_index":267,"title":{"injectables/ServiceService.html":{}},"body":{"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["serviceservice,prismaservice",{"_index":319,"title":{},"body":{"modules/ServiceModule.html":{}}}],["serviço",{"_index":340,"title":{},"body":{"injectables/ServiceService.html":{}}}],["serviço.\",400",{"_index":392,"title":{},"body":{"injectables/ServiceService.html":{}}}],["serviços",{"_index":357,"title":{},"body":{"injectables/ServiceService.html":{}}}],["short",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":652,"title":{},"body":{"index.html":{}}}],["signin",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(data",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(undefined",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin({email",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":481,"title":{},"body":{"controllers/UserController.html":{}}}],["signup(@body",{"_index":508,"title":{},"body":{"controllers/UserController.html":{}}}],["signup(data",{"_index":492,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":683,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.dto.ts",{"_index":639,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":594,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:12",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.dto.ts",{"_index":103,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/modules/auth/auth.dto.ts:11",{"_index":108,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/modules/auth/auth.dto.ts:16",{"_index":110,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/modules/auth/auth.guard.ts",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/modules/auth/auth.guard.ts:12",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:15",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:37",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:16",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:21",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:79",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:8",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/constants.ts",{"_index":600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/service/dto/service.dto.ts",{"_index":295,"title":{},"body":{"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"coverage.html":{}}}],["src/modules/service/dto/service.dto.ts:13",{"_index":307,"title":{},"body":{"classes/ServiceDTO.html":{}}}],["src/modules/service/dto/service.dto.ts:18",{"_index":301,"title":{},"body":{"classes/ServiceDTO.html":{}}}],["src/modules/service/dto/service.dto.ts:23",{"_index":304,"title":{},"body":{"classes/ServiceDTO.html":{}}}],["src/modules/service/dto/service.dto.ts:28",{"_index":305,"title":{},"body":{"classes/ServiceDTO.html":{}}}],["src/modules/service/dto/service.dto.ts:38",{"_index":311,"title":{},"body":{"classes/ServiceHire.html":{}}}],["src/modules/service/dto/service.dto.ts:44",{"_index":312,"title":{},"body":{"classes/ServiceHire.html":{}}}],["src/modules/service/service.controller.ts",{"_index":236,"title":{},"body":{"controllers/ServiceController.html":{},"coverage.html":{}}}],["src/modules/service/service.controller.ts:19",{"_index":247,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/modules/service/service.controller.ts:27",{"_index":252,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/modules/service/service.controller.ts:35",{"_index":255,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/modules/service/service.controller.ts:41",{"_index":259,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/modules/service/service.controller.ts:48",{"_index":250,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/modules/service/service.controller.ts:55",{"_index":262,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/modules/service/service.module.ts",{"_index":316,"title":{},"body":{"modules/ServiceModule.html":{}}}],["src/modules/service/service.service.ts",{"_index":320,"title":{},"body":{"injectables/ServiceService.html":{},"coverage.html":{}}}],["src/modules/service/service.service.ts:109",{"_index":348,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:12",{"_index":363,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:136",{"_index":353,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:144",{"_index":359,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:151",{"_index":367,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:169",{"_index":351,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:185",{"_index":330,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:230",{"_index":365,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:37",{"_index":361,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:58",{"_index":333,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:6",{"_index":328,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:76",{"_index":347,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/service/service.service.ts:92",{"_index":342,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/modules/transaction/transaction.controller.ts",{"_index":443,"title":{},"body":{"controllers/TransactionController.html":{},"coverage.html":{}}}],["src/modules/transaction/transaction.controller.ts:16",{"_index":448,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/modules/transaction/transaction.module.ts",{"_index":458,"title":{},"body":{"modules/TransactionModule.html":{}}}],["src/modules/transaction/transaction.service.ts",{"_index":461,"title":{},"body":{"injectables/TransactionService.html":{},"coverage.html":{}}}],["src/modules/transaction/transaction.service.ts:31",{"_index":466,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/transaction/transaction.service.ts:5",{"_index":463,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/transaction/transaction.service.ts:9",{"_index":464,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/user/dto/user.dto.ts",{"_index":527,"title":{},"body":{"classes/UserDTO.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/user/dto/user.dto.ts:20",{"_index":536,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/modules/user/dto/user.dto.ts:26",{"_index":534,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/modules/user/dto/user.dto.ts:32",{"_index":538,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/modules/user/dto/user.dto.ts:37",{"_index":539,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/modules/user/dto/user.dto.ts:42",{"_index":540,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/modules/user/dto/user.dto.ts:47",{"_index":532,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/modules/user/user.controller.ts",{"_index":476,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:16",{"_index":494,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:28",{"_index":486,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:36",{"_index":489,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:42",{"_index":497,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:50",{"_index":491,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:57",{"_index":499,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:64",{"_index":485,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":545,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":548,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:112",{"_index":558,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:13",{"_index":560,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:141",{"_index":555,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:162",{"_index":561,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:187",{"_index":563,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:20",{"_index":554,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:68",{"_index":556,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:8",{"_index":552,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:85",{"_index":557,"title":{},"body":{"injectables/UserService.html":{}}}],["src/prisma/prisma.service",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":228,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":232,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":665,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":668,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":670,"title":{},"body":{"index.html":{}}}],["started",{"_index":644,"title":{"index.html":{}},"body":{}}],["starter",{"_index":656,"title":{},"body":{"index.html":{}}}],["statements",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":692,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["success",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":684,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":703,"title":{},"body":{"modules.html":{}}}],["table",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":673,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":676,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":675,"title":{},"body":{"index.html":{}}}],["tests",{"_index":672,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":682,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":234,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signin(data",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.calc_balance({clientid",{"_index":438,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.checkbalance(service.id",{"_index":436,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.checkuser(userid",{"_index":473,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.comparepasswords(password",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.extracttokenfromheader(request",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.getservicebyid(id",{"_index":410,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.getservicebyid(serviceid",{"_index":386,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.getuserbyid(clientid",{"_index":423,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.getuserbyid(service.providerid",{"_index":424,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.getuserbyid(userid",{"_index":387,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.jwtservice.sign(payload",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.prisma.service.create",{"_index":403,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.service.findfirst",{"_index":383,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.service.findmany",{"_index":409,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.service.update",{"_index":413,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.transaction.create",{"_index":439,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.transaction.findmany",{"_index":474,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.prisma.user.delete",{"_index":415,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.user.findfirst",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{}}}],["this.prisma.user.findfirst({where",{"_index":567,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":430,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.serviceservice.createservice(data",{"_index":278,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.deleteservice(id",{"_index":289,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.getallservice",{"_index":280,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.getservicebyid(id",{"_index":283,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.servicehire(data",{"_index":286,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.updateservice(data",{"_index":294,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.transactionservice.getusertransactions(id",{"_index":455,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.userservice.createuser(data",{"_index":510,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(id",{"_index":526,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getallusers",{"_index":512,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserbyemail(email",{"_index":515,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserbyid(id",{"_index":521,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatebalance(balance",{"_index":519,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuser(id",{"_index":524,"title":{},"body":{"controllers/UserController.html":{}}}],["throttlermodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["title",{"_index":299,"title":{},"body":{"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{}}}],["todos",{"_index":355,"title":{},"body":{"injectables/ServiceService.html":{},"controllers/UserController.html":{}}}],["token",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{}}}],["touch",{"_index":693,"title":{},"body":{"index.html":{}}}],["transaction.controller",{"_index":459,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transaction.service",{"_index":450,"title":{},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{}}}],["transactioncontroller",{"_index":442,"title":{"controllers/TransactionController.html":{}},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"coverage.html":{}}}],["transactionmodule",{"_index":42,"title":{"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionservice",{"_index":449,"title":{"injectables/TransactionService.html":{}},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["transactionservice,prismaservice",{"_index":460,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transformer",{"_index":113,"title":{},"body":{"classes/AuthDto.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"classes/UserDTO.html":{},"dependencies.html":{}}}],["true",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["try",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}}}],["ttl",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":699,"title":{},"body":{"index.html":{}}}],["type",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ServiceController.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["types/argon2",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["types/bcrypt",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":655,"title":{},"body":{"index.html":{}}}],["um",{"_index":350,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{}}}],["undefined",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unit",{"_index":671,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":712,"title":{},"body":{"properties.html":{}}}],["updatebalance",{"_index":482,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatebalance(@body('balance",{"_index":517,"title":{},"body":{"controllers/UserController.html":{}}}],["updatebalance(balance",{"_index":495,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateservice",{"_index":243,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceService.html":{}}}],["updateservice(@body",{"_index":291,"title":{},"body":{"controllers/ServiceController.html":{}}}],["updateservice(data",{"_index":260,"title":{},"body":{"controllers/ServiceController.html":{},"injectables/ServiceService.html":{}}}],["updateservice(data:servicedto",{"_index":411,"title":{},"body":{"injectables/ServiceService.html":{}}}],["updateuser",{"_index":551,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(id",{"_index":562,"title":{},"body":{"injectables/UserService.html":{}}}],["useguards",{"_index":266,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":275,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ServiceService.html":{},"injectables/TransactionService.html":{}}}],["user.balance",{"_index":389,"title":{},"body":{"injectables/ServiceService.html":{}}}],["user.controller",{"_index":546,"title":{},"body":{"modules/UserModule.html":{}}}],["user.id",{"_index":432,"title":{},"body":{"injectables/ServiceService.html":{}}}],["user.role",{"_index":396,"title":{},"body":{"injectables/ServiceService.html":{}}}],["user.service",{"_index":502,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":475,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":493,"title":{"classes/UserDTO.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userid",{"_index":332,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":43,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userservice",{"_index":501,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice,prismaservice,jwtservice",{"_index":547,"title":{},"body":{"modules/UserModule.html":{}}}],["userupdate",{"_index":483,"title":{},"body":{"controllers/UserController.html":{}}}],["userupdate(@param('id",{"_index":523,"title":{},"body":{"controllers/UserController.html":{}}}],["userupdate(id",{"_index":498,"title":{},"body":{"controllers/UserController.html":{}}}],["uso",{"_index":575,"title":{},"body":{"injectables/UserService.html":{}}}],["usuario",{"_index":370,"title":{},"body":{"injectables/ServiceService.html":{}}}],["usuarios",{"_index":507,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usuário",{"_index":344,"title":{},"body":{"injectables/ServiceService.html":{}}}],["validator",{"_index":116,"title":{},"body":{"classes/AuthDto.html":{},"classes/ServiceDTO.html":{},"classes/ServiceHire.html":{},"classes/UserDTO.html":{},"dependencies.html":{}}}],["value",{"_index":640,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":713,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verificar",{"_index":334,"title":{},"body":{"injectables/ServiceService.html":{}}}],["verifique",{"_index":577,"title":{},"body":{"injectables/UserService.html":{}}}],["version",{"_index":710,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":666,"title":{},"body":{"index.html":{}}}],["we're",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{}}}],["website",{"_index":697,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":687,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServiceModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nServiceModule\n\nServiceModule\n\nAppModule -->\n\nServiceModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ServiceModule\n                        \n                        \n                            TransactionModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserModule } from './modules/user/user.module';\nimport { ServiceModule } from './modules/service/service.module';\nimport { TransactionModule } from './modules/transaction/transaction.module';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { AuthModule } from './modules/auth/auth.module';\n\n\n\n\n\n@Module({\n  imports: [UserModule, ServiceModule, TransactionModule,\n    ThrottlerModule.forRoot([\n      {\n        name: 'short',\n        ttl: 1000,\n        limit: 3,\n      },\n      {\n        name: 'medium',\n        ttl: 10000,\n        limit: 20\n      },\n      {\n        name: 'long',\n        ttl: 60000,\n        limit: 100\n      }\n    ]),\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return '-----------------------API-------------------------';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(data: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signin')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthDto } from './auth.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Auth')\n@Controller('api/auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n   \n   @Post('signin')\n   async signIn(@Body() data:AuthDto) {\n      return await this.authService.signIn(data)\n   }\n   \n   \n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Expose()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/auth.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/auth.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { Expose } from \"class-transformer\"\nimport { IsEmail, IsNotEmpty } from \"class-validator\"\n\nexport class AuthDto {\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @Expose()\n    @IsEmail()\n    email:string\n\n    @ApiProperty()\n    @Expose()\n    @IsNotEmpty()\n    password:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/modules/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n    CanActivate,\n    ExecutionContext,\n    Injectable,\n    UnauthorizedException,\n  } from '@nestjs/common';\n  import { JwtService } from '@nestjs/jwt';\n  import { jwtConstants } from './constants';\n  import { Request } from 'express';\n  \n  @Injectable()\n  export class AuthGuard implements CanActivate {\n    constructor(private jwtService: JwtService) {}\n  \n    async canActivate(context: ExecutionContext): Promise {\n      const request = context.switchToHttp().getRequest();\n      const token = this.extractTokenFromHeader(request);\n      if (!token) {\n        throw new UnauthorizedException();\n      }\n      try {\n        const payload = await this.jwtService.verifyAsync(\n          token,\n          {\n            secret: jwtConstants.secret\n          }\n        );\n        // 💡 We're assigning the payload to the request object here\n        // so that we can access it in our route handlers\n        request['user'] = payload;\n      } catch {\n        throw new UnauthorizedException();\n      }\n      return true;\n    }\n  \n    private extractTokenFromHeader(request: Request): string | undefined {\n      const [type, token] = request.headers.authorization?.split(' ') ?? [];\n      return type === 'Bearer' ? token : undefined;\n    }\n  }\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\n\n\n@Module({\n  controllers: [AuthController],\n  imports:[\n    JwtModule.register({\n      global: true,\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '120s' },\n    }),\n  ],\n  providers: [\n    AuthService,\n    PrismaService\n    \n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comparePasswords\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        comparePasswords\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePasswords(password: string, hashedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(undefined: AuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            AuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { AuthDto } from './auth.dto';\nimport * as argon2 from 'argon2';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n   \n    constructor(\n        private prisma:PrismaService,\n        private jwtService: JwtService,\n    ) {} \n\n\n    async comparePasswords(password: string, hashedPassword: string): Promise {\n        return await argon2.verify(hashedPassword, password);\n      }\n\n\n     async signIn({email, password}:AuthDto){\n        \n        \n\n               const checkemail =  await this.prisma.user.findFirst({\n                  where:{\n                        email\n                    }\n               })\n\n               \n               if(!checkemail){\n                   throw new HttpException('Email ou  Senha  incorreta', 400);\n               }\n               \n               const chackpassword = await this.comparePasswords(password, checkemail.password)\n               console.log(checkemail.password)\n               console.log(chackpassword)\n\n\n               if(chackpassword){\n                   throw new HttpException('Email ou  Senha  incorreta', 400);\n               }else {\n                \n\n                const data_ = await this.prisma.user.findFirst({\n                    where:{\n                       email\n                     },\n                     select:{\n                       id:true,\n                       email:true,\n                       nif:true,\n                       balance:true,\n                       role:true,\n                     }\n                  })\n   \n                  const payload = {\n                   id: checkemail.id,\n                   email:checkemail.email,\n                   role:checkemail.role,\n                  }\n                 \n   \n                  return {\n   \n                      access_token: this.jwtService.sign(payload),\n                      user: data_\n                  }\n\n\n               }\n\n        \n    }\n\n\n    async logout(){\n        return {\n            message: 'Logout Success'\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServiceController.html":{"url":"controllers/ServiceController.html","title":"controller - ServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/service/service.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/service\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createService\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteService\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllServices\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getServiceById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                hireService\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createService\n                        \n                    \n                \n            \n            \n                \n                        \n                    createService(data: ServiceDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/service/service.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ServiceDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteService\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteService(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/service/service.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllServices\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllServices()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getAll')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/service/service.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getServiceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getServiceById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getById/:id')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/service/service.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        hireService\n                        \n                    \n                \n            \n            \n                \n                        \n                    hireService(data: ServiceHire)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('hire')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/service/service.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ServiceHire\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateService\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateService(data: ServiceDTO, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('update/:id')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/service/service.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ServiceDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Get, Param, Delete, Put, UseGuards } from '@nestjs/common';\nimport { ServiceService } from './service.service';\nimport { ServiceDTO, ServiceHire } from './DTO/service.dto';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '../auth/auth.guard';\n\n\n\n@ApiTags('Service')\n@ApiBearerAuth()\n@ApiBearerAuth()\n@Controller('api/service')\nexport class ServiceController {\n  constructor(private readonly serviceService: ServiceService) {}\n  \n\n  @Post('create')\n  @UseGuards(AuthGuard)\n  async createService(@Body() data:ServiceDTO) {\n\n     return await this.serviceService.createService(data)\n    \n  }\n\n   @Get('getAll')\n   @UseGuards(AuthGuard)\n   async  getAllServices() {\n     return await this.serviceService.getAllService()\n   }\n\n   \n\n   @Get('getById/:id')\n   @UseGuards(AuthGuard)\n   async getServiceById(@Param('id') id: string) {\n     return await this.serviceService.getServiceById(id)\n   }\n   \n   @Post('hire')\n   @UseGuards(AuthGuard)\n   async hireService(@Body() data: ServiceHire) {\n     return await this.serviceService.servicehire(data)\n   }\n\n\n   @Delete('delete/:id')\n   @UseGuards(AuthGuard)\n   async deleteService(@Param('id') id: string) {\n     return await this.serviceService.deleteService(id)\n   }\n\n   \n   @Put('update/:id')\n   @UseGuards(AuthGuard)\n   async updateService(@Body() data:ServiceDTO, @Param('id') id:string) {\n     return await this.serviceService.updateService(data, id)\n   }\n\n   \n\n  \n  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceDTO.html":{"url":"classes/ServiceDTO.html","title":"class - ServiceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/service/DTO/service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                providerId\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/service/DTO/service.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/service/DTO/service.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        providerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/service/DTO/service.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/service/DTO/service.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { Expose } from \"class-transformer\"\nimport { IsNotEmpty, IsNumber } from \"class-validator\"\n\n\n\n\nexport class ServiceDTO  {\n    \n    @IsNotEmpty()\n    @ApiProperty()\n    @Expose()\n    title: string\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @Expose()\n    description: string\n\n    @ApiProperty()\n    @Expose()\n    @IsNumber()\n    price: number\n\n    @ApiProperty()\n    @Expose()\n    @IsNotEmpty()\n    providerId: string\n\n\n}\n\nexport class ServiceHire {\n     \n    @ApiProperty() \n    @Expose()\n    @IsNotEmpty()\n     clientId: string\n     \n\n     @ApiProperty() \n     @Expose()\n     @IsNotEmpty()\n     serviceId: string \n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceHire.html":{"url":"classes/ServiceHire.html","title":"class - ServiceHire","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceHire\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/service/DTO/service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                clientId\n                            \n                            \n                                    \n                                    \n                                    \n                                serviceId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/service/DTO/service.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/service/DTO/service.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { Expose } from \"class-transformer\"\nimport { IsNotEmpty, IsNumber } from \"class-validator\"\n\n\n\n\nexport class ServiceDTO  {\n    \n    @IsNotEmpty()\n    @ApiProperty()\n    @Expose()\n    title: string\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @Expose()\n    description: string\n\n    @ApiProperty()\n    @Expose()\n    @IsNumber()\n    price: number\n\n    @ApiProperty()\n    @Expose()\n    @IsNotEmpty()\n    providerId: string\n\n\n}\n\nexport class ServiceHire {\n     \n    @ApiProperty() \n    @Expose()\n    @IsNotEmpty()\n     clientId: string\n     \n\n     @ApiProperty() \n     @Expose()\n     @IsNotEmpty()\n     serviceId: string \n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServiceModule.html":{"url":"modules/ServiceModule.html","title":"module - ServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    ServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServiceModule\n\n\n\ncluster_ServiceModule_imports\n\n\n\ncluster_ServiceModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServiceModule\n\nServiceModule\n\nServiceModule -->\n\nAuthModule->ServiceModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nServiceModule -->\n\nPrismaService->ServiceModule\n\n\n\n\n\nServiceService\n\nServiceService\n\nServiceModule -->\n\nServiceService->ServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/service/service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            ServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ServiceService } from './service.service';\nimport { ServiceController } from './service.controller';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { AuthModule } from '../auth/auth.module';\n\n\n\n\n\n@Module({\n  controllers: [ServiceController],\n  providers: [ServiceService,PrismaService],\n  imports: [AuthModule]\n\n})\nexport class ServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServiceService.html":{"url":"injectables/ServiceService.html","title":"injectable - ServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/service/service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calc_balance\n                            \n                            \n                                    Async\n                                checkBalance\n                            \n                            \n                                    Async\n                                checkProvider\n                            \n                            \n                                    Async\n                                checkUser\n                            \n                            \n                                    Async\n                                createService\n                            \n                            \n                                    Async\n                                deleteService\n                            \n                            \n                                    Async\n                                getAllService\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getServiceById\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                servicehire\n                            \n                            \n                                    Async\n                                updateService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/service/service.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calc_balance\n                        \n                    \n                \n            \n            \n                \n                        \n                    calc_balance(undefined: ServiceHire)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            ServiceHire\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkBalance(serviceId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Verificar o saldo do cliente para comprar o serviço\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkProvider(providerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Verificar se o usuário é prestador\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                providerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Verificar se o usuário é cliente\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createService\n                        \n                    \n                \n            \n            \n                \n                        \n                    createService(data: ServiceDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Criar um serviço\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ServiceDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteService\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteService(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:169\n                        \n                    \n\n\n            \n                \n                        Deletar serviço\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllService\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllService()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:136\n                        \n                    \n\n\n            \n                \n                        Pegar todos os serviços\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:144\n                        \n                    \n\n\n            \n                \n                        Pegar um serviço por id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getServiceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getServiceById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(userid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        servicehire\n                        \n                    \n                \n            \n            \n                \n                        \n                    servicehire(undefined: ServiceHire)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:230\n                        \n                    \n\n\n            \n                \n                        Contratar serviços\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            ServiceHire\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateService\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateService(data: ServiceDTO, serviceId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/service/service.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Atualizar um serviço\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ServiceDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                serviceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ServiceDTO, ServiceHire } from './DTO/service.dto';\n\n@Injectable()\nexport class ServiceService {\n   constructor(private prisma: PrismaService) {}\n    \n\n   // buscar usuario pelo id \n\n   async getUserById(userid: string) {\n         try {\n\n            const checkId = await this.prisma.user.findFirst({\n                where:{ \n                   id: userid \n                }\n            })\n\n          if(!checkId) {\n            throw new HttpException(\"id informado não encontrado\",404)\n          }\n\n          return checkId\n\n\n         }catch(error) {\n            throw new HttpException(\"problema na aplicação\",400)\n         }\n   }\n\n\n   // buscar serviço pelo id \n\n\n   async getServiceById(id: string) {\n         try {\n\n            const service = await this.prisma.service.findFirst({\n                where: { id }\n            })\n\n            if(!service) {\n               throw new HttpException(\"id informado não encontrado\",404)\n            }\n\n            return service\n\n         }catch(error) {\n            throw new HttpException(\"problema na aplicação \",400)\n         }\n   }\n  \n\n   /** Verificar o saldo do cliente para comprar o serviço */\n\n     async checkBalance(serviceId: string, userId: string) {\n          \n      const service = await this.getServiceById(serviceId)\n      const user = await this.getUserById(userId)\n        \n      if(service.price > user.balance)  {\n         throw new HttpException(\"Saldo insuficiente para contratar um serviço.\",400)\n      }\n      \n        \n        \n \n\n\n     }\n  \n   /** Verificar se o usuário é cliente */\n\n   async checkUser(userId: string) {\n      const  user = await this.prisma.user.findFirst({\n         where: {\n           id: userId \n         }\n      })\n\n      if(!user)  throw new HttpException(\"usuario não encontrado.\",404)\n\n       return user.role == 'cliente'\n      \n \n   }\n  \n   /** Verificar se o usuário é prestador */\n\n   async checkProvider(providerId: string) {\n      const  provider = await this.prisma.user.findFirst({\n         where: {\n           id: providerId\n         }\n      })\n\n      if(!provider)  throw new HttpException(\"prestador não encontrado.\",404)\n\n       return provider.role == 'prestador'\n      \n \n   }\n   \n\n   /** Criar um serviço */\n\n     async createService(data:ServiceDTO) {\n         \n        try {\n\n         if(this.checkProvider) {\n            return await this.prisma.service.create({\n              data\n            })\n\n         }else {\n\n            throw new HttpException(\"Um cliente não poder criar um serviço.\",400)\n         }\n\n\n        }catch(error) { \n         throw new HttpException(\"Error ao salvar serviço.\",400)\n\n        }\n\n\n     }\n\n  \n\n   /** Pegar todos os serviços */\n\n   async getAllService() {\n\n       return await this.prisma.service.findMany() \n   }\n   \n\n   /** Pegar um serviço por id */\n\n     async getById(id: string) {\n       return await this.getServiceById(id)\n     }\n   \n\n   /** Atualizar um serviço */\n\n   async updateService(data:ServiceDTO, serviceId: string) {\n      \n           \n         const checkservice = await this.getServiceById(serviceId)\n\n         \n         return await this.prisma.service.update({\n          data,\n          where: {\n             id: checkservice.id \n          }\n         })\n \n       \n   }\n   \n   /** Deletar serviço */\n\n   async deleteService(id: string) {\n\n     const service = await  this.getServiceById(id) \n\n     return await this.prisma.user.delete({\n         where: {\n             id: service.id\n         }\n     })\n   \n   }\n\n\n   // calcular restante  o saldo para o cleinte e prestador \n\n\n   async calc_balance({clientId, serviceId}:ServiceHire) {\n      \n      const user = await this.getUserById(clientId) \n      const service = await this.getServiceById(serviceId) \n\n      const provider = await this.getUserById(service.providerId)\n\n      const current_balance_client = user.balance - service.price \n      const current_balance_provider = provider.balance + service.price\n\n      const balance_cleint = await this.prisma.user.update({\n           data: {\n            balance: current_balance_client\n           },\n           where: {\n              id: user.id\n           }\n      })\n\n      const balance_provider = await this.prisma.user.update({\n          data: {\n             balance: current_balance_provider\n          },\n          where: {\n            id: service.providerId\n          }\n      })\n\n\n      return {\n          balance_cleint,\n          balance_provider\n      }\n\n\n      \n      \n   }\n\n\n\n\n\n   /** Contratar serviços */\n\n   async servicehire({clientId, serviceId}:ServiceHire) {\n       \n       const user = await this.getUserById(clientId) \n       const service = await this.getServiceById(serviceId) \n       \n       \n          await this.checkBalance(service.id, user.id)\n       \n          \n           const  data_user =  this.calc_balance({clientId, serviceId})\n\n           return  await  this.prisma.transaction.create({\n                 data: {\n                    clientId: (await data_user).balance_cleint.id,\n                    providerId: service.providerId,\n                    serviceId: service.id,\n                    amount: service.price\n\n                 }\n           })\n         \n\n       \n\n\n\n\n   }\n\n   \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionController.html":{"url":"controllers/TransactionController.html","title":"controller - TransactionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/transaction\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getUserTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserTransaction(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('history/:id')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/transaction/transaction.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, UseGuards } from '@nestjs/common';\nimport { TransactionService } from './transaction.service';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '../auth/auth.guard';\n\n@ApiTags('transaction')\n@ApiBearerAuth()\n@Controller('api/transaction')\nexport class TransactionController {\n  constructor(private readonly transactionService: TransactionService) {}\n  \n\n\n  @Get('history/:id')\n  @UseGuards(AuthGuard)\n  async  getUserTransaction(@Param('id') id: string) {\n     return await this.transactionService.getUserTransactions(id)\n  }\n     \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionModule.html":{"url":"modules/TransactionModule.html","title":"module - TransactionModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nPrismaService->TransactionModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/transaction/transaction.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TransactionService } from './transaction.service';\nimport { TransactionController } from './transaction.controller';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Module({\n  controllers: [TransactionController],\n  providers: [TransactionService,PrismaService],\n})\nexport class TransactionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/transaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUser\n                            \n                            \n                                    Async\n                                getUserTransactions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/transaction/transaction.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUser(userid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/transaction/transaction.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserTransactions(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/transaction/transaction.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class TransactionService {\n    constructor(private prisma:PrismaService){}\n\n\n    async checkUser(userid: string) {\n        try {\n\n            const user = await this.prisma.user.findFirst({\n                 where: {\n                     id: userid\n                 }\n            })\n\n            if(!user) {\n               throw new HttpException(\"usuario não econtrado\",404)\n            }\n\n            return user\n\n        }catch(error) {\n             throw new HttpException(\"Erro na aplicação contacta a equipa de desenvolvimento\",400)\n        }\n    } \n\n\n\n    async getUserTransactions(userId: string) {\n\n          try{\n          \n            const {id} = await this.checkUser(userId)\n\n            return await this.prisma.transaction.findMany({\n                 where: {\n                     clientId: id\n                 }\n            })\n\n          }catch(error) {\n\n            throw new HttpException(\"Erro na aplicação contacta a equipa de desenvolvimento\",400)\n\n          }\n\n\n          \n          \n\n\n    }\n\n    \n     \n    \n\n    \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserByEmail\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserById\n                            \n                            \n                                    \n                                    Async\n                                signup\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateBalance\n                            \n                            \n                                    \n                                    \n                                    Async\n                                userUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getAll')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserByEmail(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getByEmail')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getById/:id')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(data: UserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateBalance(balance: number, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('updateBalance')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                balance\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        userUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    userUpdate(id: string, data: UserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('update/:id')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post,Get, Param, Put, Delete, UseGuards } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserDTO } from './DTO/user.dto';\nimport { ApiBearerAuth, ApiProperty, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '../auth/auth.guard';\n\n@ApiTags('User')\n@ApiBearerAuth()\n@Controller('api/user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n    // Cadastro de usuarios\n\n    @Post('create')\n    async signup(@Body()  data:UserDTO) {\n\n      return this.userService.createUser(data)\n\n    }\n\n    \n\n    // Busca de todos os usuarios\n    \n    @Get('getAll')\n    @UseGuards(AuthGuard)\n    async getAllUsers() {\n      return this.userService.getAllUsers()\n    } \n    \n\n    // Busca de usuarios por email\n    @Get('getByEmail')\n    @UseGuards(AuthGuard)\n    async getUserByEmail(@Body('email') email: string) {\n      return this.userService.getUserByEmail(email)\n    }\n    \n    @Post('updateBalance')\n    @UseGuards(AuthGuard)\n    async updateBalance(@Body('balance') balance: number, @Body('userId') userId: string) {\n      return this.userService.updateBalance(balance, userId)\n    }\n    \n\n    // Busca de usuarios por id\n    @Get('getById/:id')\n    @UseGuards(AuthGuard)\n    async getUserById(@Param('id') id: string) {\n      return this.userService.getUserById(id)\n    } \n    \n    // Atualização de usuarios\n    @Put('update/:id')\n    @UseGuards(AuthGuard)\n    async userUpdate(@Param('id') id: string, @Body() data: UserDTO) {\n        return this.userService.updateUser(id, data)\n    }\n    \n    // Deletar usuarios\n    @Delete('delete/:id')\n    @UseGuards(AuthGuard)\n    async deleteUser(@Param('id') id: string) {\n      return this.userService.deleteUser(id)\n    }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/DTO/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                balance\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                fullname\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                nif\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/DTO/user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/DTO/user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fullname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/DTO/user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        nif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty()@Expose()@IsNumberString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/DTO/user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/DTO/user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/DTO/user.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { Expose } from \"class-transformer\"\nimport { IsEmail, IsNotEmpty, IsNumber, IsNumberString } from \"class-validator\"\n\n\n\n\nenum Role {\n    cliente = 'cliente',\n    prestador = 'prestador'\n   }\n\n\n\nexport class UserDTO {\n     \n     @IsNotEmpty()    \n     @Expose() \n     @ApiProperty()\n     fullname: string \n\n     @IsEmail()\n     @IsNotEmpty()\n     @Expose()\n     @ApiProperty()\n     email: string\n\n     @IsNotEmpty()\n     @ApiProperty()\n     @Expose()\n     @IsNumberString()\n     nif: string  \n\n     @IsNotEmpty()\n     @Expose()\n     @ApiProperty()\n     password: string \n\n     @ApiProperty()\n     @Expose()\n     @IsNotEmpty()\n     role: Role\n     \n     @IsNumber()\n     @Expose()\n     @ApiProperty()\n     balance?: number\n     \n     \n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { JwtService } from '@nestjs/jwt';\n\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService,PrismaService,JwtService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUserByEmail\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                updateBalance\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(undefined: UserDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            UserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateBalance(balance: number, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                balance\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, data: UserDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UserDTO } from './DTO/user.dto';\nimport * as argon2 from 'argon2';\n\n\n@Injectable()\nexport class UserService {\n\n  constructor(private prisma: PrismaService) {}\n\n\n  async hashPassword(password: string): Promise {\n   return await argon2.hash(password);\n }\n\n\n   \n// Cadastro de usuarios\n async createUser({fullname,email,password,nif,role,balance}:UserDTO) {\n\n     let hashedPassword = \"\" \n     \n     try {\n     \n      const checkemail  = await this.prisma.user.findFirst({where: {email}})\n       const checknif  = await this.prisma.user.findFirst({where: {nif}})\n\n       if(checknif) {\n         throw new HttpException('O NIF fornecido já está em uso. Por favor, verifique se o número está correto ou escolha um diferente', HttpStatus.BAD_REQUEST)\n       }\n       if(checkemail) {\n        throw new HttpException('Este e-mail já está em uso. Por favor, insira um e-mail diferente.', HttpStatus.BAD_REQUEST)\n      }\n\n      if(password.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/service/DTO/service.dto.ts\n            \n            class\n            ServiceDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/service/DTO/service.dto.ts\n            \n            class\n            ServiceHire\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/service/service.controller.ts\n            \n            controller\n            ServiceController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/service/service.service.ts\n            \n            injectable\n            ServiceService\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                src/modules/transaction/transaction.controller.ts\n            \n            controller\n            TransactionController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/transaction/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/DTO/user.dto.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.0\n        \n            @nestjs/throttler : ^6.0.0\n        \n            @prisma/client : ^5.17.0\n        \n            @types/argon2 : ^0.15.0\n        \n            @types/bcrypt : ^5.0.2\n        \n            argon2 : ^0.40.3\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            csurf : ^1.11.0\n        \n            helmet : ^7.1.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../user.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/user/DTO/user.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 cliente\n                            \n                        \n                        \n                            \n                                Value : cliente\n                            \n                        \n                        \n                            \n                                 prestador\n                            \n                        \n                        \n                            \n                                Value : prestador\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ServiceModule\n\n\n\ncluster_ServiceModule_providers\n\n\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServiceModule\n\nServiceModule\n\nServiceModule -->\n\nAuthModule->ServiceModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nServiceModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\nServiceModule -->\n\nPrismaService->ServiceModule\n\n\n\nTransactionModule -->\n\nPrismaService->TransactionModule\n\n\n\nUserModule -->\n\nPrismaService->UserModule\n\n\n\n\n\nServiceService\n\nServiceService\n\nServiceModule -->\n\nServiceService->ServiceModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: '78495849jfkdk4759483853953530',\n  }\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
